#!/bin/bash

RAW_URL="https://raw.githubusercontent.com/awisu2/my_shell/master"

DOWNLOAD_PATH_SUDO="/usr/local/bin/"

MAIN_FILE="myshells"
READ_FILES=("echo" "mysql" "os" "ssh" "systemctl")
READ_FILES_DIR=".myshells"

DIR=$(cd $(dirname $0); pwd)

# any function ==========
sh_if_exists() {
  if [ -f "$1" ]; then
    . "$1"
  fi
}

cat_if_exists() {
  if [ -f "$1" ]; then
    cat "$1"
  fi
}

self_update() {
  read -p "is able to use sudo? y (y/n):" res

  $sudo=""
  if [ "$res" == "y" -o -z "$res" ]; then
    $sudo="sudo"
  fi

  echo "download to $DIR/$MAIN_FILE"
  $sudo curl -o "$DIR/$MAIN_FILE" "$RAW_URL/$MAIN_FILE"

  $sudo mkdir -p "$DIR/$READ_FILES_DIR"
  $sudo chmod 755 "$DIR/$READ_FILES_DIR"
  for READ_FILE in "${READ_FILES[@]}"; do
    FILE="$DIR/$READ_FILES_DIR/$READ_FILE"
    $sudo curl -o "$FILE" "$RAW_URL/$READ_FILE"
    $sudo chmod 755 "$FILE"
  done
}

# read_files ==========
HELP=`cat << 'EOF'
Usage: $0 command

self:
  self_update update this command
EOF
`

for READ_FILE in "${READ_FILES[@]}"; do
  sh_if_exists "${DIR}/.myshells/${READ_FILE}"
done

# call commands ==========
cmd=$1
shift
case "$cmd" in
  ssh_key_generate)
    show_ssh_key_generate
    ;;
  ssh_config)
    show_ssh_config
    ;;
  ssh_config_hosts)
    show_ssh_config_hosts
    ;;
  os_info)
    os_info
    ;;
  os_usingports)
    os_usingports "$@"
    ;;
  self_update)
    self_update
    ;;
  mysql_status)
    mysql_status "$@"
    ;;
  mysql_start)
    mysql_start "$@"
    ;;
  mysql_stop)
    mysql_stop "$@"
    ;;
  mysql)
    mysql_run "$@"
    ;;
  systemctl_status)
    systemctl_status "$@"
    ;;
  systemctl_start)
    systemctl_start "$@"
    ;;
  systemctl_stop)
    systemctl_stop "$@"
    ;;
  systemctl_autorun_start)
    systemctl_autorun_start "$@"
    ;;
  systemctl_autorun_stop)
    systemctl_autorun_stop "$@"
    ;;
  *)
    echo "$HELP"
    exit 2
    ;;
esac