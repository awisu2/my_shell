#!/bin/bash

SSH_CONFIG=$HOME/.ssh/config

RAW_URL="https://raw.githubusercontent.com/awisu2/my_shell/master/myshells"
DOWNLOAD_PATH_SUDO="/usr/local/bin/myshells"
DOWNLOAD_PATH_USER="$HOME/myshells"

echo_attention() {
  echo "=================================================="
  echo "$1"
  echo "=================================================="
}

echo_onlyshow() {
  echo_attention "only show"
}

cat_if_exists() {
  if [ -f "$1" ]; then
    echo "exists $1"
    cat $1
  fi
}

# common methods ==========
show_ssh_key_generate() {
  echo_onlyshow

  type="-t rsa"
  bit="-b 4096"
  comment="-C foo@bar.com"
  file="-f ~/.ssh/id_rsa"
  
  echo "ssh-keygen ${type} ${bit} ${comment} ${file}"
  echo ""
  echo "-C is comment. default format is {user@domain} it can delete if set \"\""
  echo ""

  echo "create public from secret"
  echo "ssh-keygen -y ${file} > ~/.ssh/id_rsa.pub"
  echo ""
}

show_ssh_config() {
  if [ ! -f "$SSH_CONFIG" ]; then
    echo "file not exists. $SSH_CONFIG"
    exit 0
  fi

  cat $SSH_CONFIG
}

show_ssh_config_hosts() {
  if [ ! -f "$SSH_CONFIG" ]; then
    echo "file not exists. $SSH_CONFIG"
    exit 0
  fi

  for i in `grep "^Host " $SSH_CONFIG | sed s/"^Host "// | grep -v "^\*$"`
  do
    echo "${i};"
  done
}

os_info() {
  echo "uname"
  uname -a
  echo ""

  echo "cat any os release file"
  cat_if_exists "/etc/redhat-release"
  cat_if_exists "/etc/fedora-release"
  cat_if_exists "/etc/debian_version "
  cat_if_exists "/etc/lsb-release"
  cat_if_exists "/etc/turbolinux-release"
  cat_if_exists "/etc/SuSE-release"
  echo ""

  echo "proc version"
  cat_if_exists "/proc/version"
}

self_update() {
  read -p "is able to use sudo? (y/n):" res
  if [ "$res" == "y" ]; then
    echo "download to $DOWNLOAD_PATH_SUDO"
    sudo curl -o $DOWNLOAD_PATH_SUDO $RAW_URL
  else
    echo "download to $DOWNLOAD_PATH_USER"
    curl -o $DOWNLOAD_PATH_USER $RAW_URL
  fi
}

# call commands ==========
cmd=$1
shift
case "$cmd" in
  ssh_key_generate)
    show_ssh_key_generate
    ;;
  ssh_config)
    show_ssh_config
    ;;
  ssh_config_hosts)
    show_ssh_config_hosts
    ;;
  os_info)
    os_info
    ;;
  self_update)
    self_update
    ;;
  *)
    read -d '' help <<-EOF
Usage: $0 command

ssh:
  ssh_config show   ssh config
  ssh_config_hosts  show ssh config hosts
  ssh_key_generate  show ssh key generate sample
os:
  os_info check os infomation
self:
  self_update update this command
EOF
  echo "$help"
  exit 2
  ;;
esac