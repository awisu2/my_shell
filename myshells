#!/bin/bash

TRUE="0"
FALSE="1"

RAW_URL="https://raw.githubusercontent.com/awisu2/my_shell/master"

DOWNLOAD_PATH_SUDO="/usr/local/bin/"

MAIN_FILE="myshells"
SUB_COOMANDS=("function" "echo" "mysql" "os" "ssh" "systemctl")
SUB_COOMANDS_DIR_NAME=".myshells"

DIR=$(cd $(dirname $0); pwd)
SUB_COOMANDS_DIR="$DIR/$SUB_COOMANDS_DIR_NAME"

# any function ==========
sh_if_exists() {
  if [ -f "$1" ]; then
    . "$1"
  fi
}

self_update() {
  read -p "is able to use sudo? y (y/n):" res

  $sudo=""
  if [ "$res" == "y" -o -z "$res" ]; then
    $sudo="sudo"
  fi

  echo "download to $DIR/$MAIN_FILE"
  $sudo curl -o "$DIR/$MAIN_FILE" "$RAW_URL/$MAIN_FILE"

  $sudo mkdir -p "$SUB_COOMANDS_DIR"
  $sudo chmod 755 "$SUB_COOMANDS_DIR"
  for READ_FILE in "${SUB_COOMANDS[@]}"; do
    FILE="$SUB_COOMANDS_DIR/$READ_FILE"
    $sudo curl -o "$FILE" "$RAW_URL/$SUB_COOMANDS_DIR_NAME/$READ_FILE"
    $sudo chmod 755 "$FILE"
  done
}

echo_help() {
  echo "$HELP"
  exit 2
}

in_array() {
  key="$1"
  shift
  arr=$@

  if [ -z $key ]; then
    echo $FALSE
    exit 0
  else
    for item in ${arr[@]}; do
      if [ "$key" = "$item" ]; then
        echo $TRUE
        exit 0
      fi
    done
  fi

  echo $FALSE
  exit 0
}

# SUB_COOMANDS ==========
HELP=`cat << 'EOF'
Usage: $0 command

self:
  self_update update this command
EOF
`

for READ_FILE in "${SUB_COOMANDS[@]}"; do
  sh_if_exists "${SUB_COOMANDS_DIR}/${READ_FILE}"
done

# call commands ==========
cmd=$1
shift
case "$cmd" in
  self_update)
    self_update
    ;;
  *)
    # サブコマンドが存在する場合は実行
    ret=`in_array "$cmd" "${SUB_COOMANDS[@]}"`
    if [ "$ret" = "$TRUE" ]; then
      "${cmd}_command" "$@"
    else
      echo_help
    fi
    ;;
esac